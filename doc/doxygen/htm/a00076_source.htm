<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>2GrayEngine: Исходный файл RawSocketMethods.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen_.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.bmp"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">2GrayEngine
   </div>
   <div id="projectbrief">Network engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.5 -->
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_32937a55a6fb687a16826cf9f361e0b9.htm">2GrayEngine-master</a></li><li class="navelem"><a class="el" href="dir_abb26aa1f738470fd3c1e4a1410fa318.htm">code</a></li><li class="navelem"><a class="el" href="dir_8abab398aa1fd7d3af9cc452db32f15e.htm">grNetwork</a></li><li class="navelem"><a class="el" href="dir_ebe8f7a7c45e296a96db625452fded9b.htm">RawSocket</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">RawSocketMethods.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor"># ifndef H_GRNETWORK_RAWSOCKET_RAWSOCKETMETHODS</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor"># define H_GRNETWORK_RAWSOCKET_RAWSOCKETMETHODS</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="a00018.htm#ad7e1f526195723df9ed919eb7e9f130e">   11</a></span>&#160;<a class="code" href="a00018.htm#ad7e1f526195723df9ed919eb7e9f130e">RawSocket :: RawSocket</a> ()</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    :</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    lastError_     (( 0), (0 )) <span class="comment">/* good ones */</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    socketData_.socket              = INVALID_SOCKET;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    socketData_.addrInfo.sin_family = AF_INET;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">   26</a></span>&#160;<a class="code" href="a00006.htm">ErrorInfo</a> <a class="code" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">RawSocket :: GetLastError</a> ()</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> lastError_;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="a00018.htm#a9d411a15161cf88af69e5761fd3ca88b">   39</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#a9d411a15161cf88af69e5761fd3ca88b">RawSocket :: isBlockError</a> ()</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">if</span> ( lastError_.<a class="code" href="a00006.htm#a34d784c7de57ef82ac88e00044804479">lib</a> () == 1035 ||</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;         lastError_.<a class="code" href="a00006.htm#a34d784c7de57ef82ac88e00044804479">lib</a> () == 0</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;       )</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="a00018.htm#ab2d69f96f73d1c3c912dcb3cb36b53e8">   58</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#ab2d69f96f73d1c3c912dcb3cb36b53e8">RawSocket :: sync</a>         (<span class="keywordtype">bool</span> makeAsync)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{ </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> enable = (<span class="keywordtype">unsigned</span> long)<span class="keyword">true</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">int</span> result = 0;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span> ( makeAsync )</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        result = ioctlsocket (socketData_.socket, FIONBIO, &amp;enable);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        result = ioctlsocket (socketData_.socket, 0, NULL);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">if</span> ( <a class="code" href="a00018.htm#a9d411a15161cf88af69e5761fd3ca88b">isBlockError</a> () )</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="a00018.htm#a0b2927ba927eaa96bdfda17504881b90">   85</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#a0b2927ba927eaa96bdfda17504881b90">RawSocket :: customHeader</a> (<span class="keywordtype">bool</span> makeCustom)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">int</span> result = 0;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">if</span> ( makeCustom )</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        result = setsockopt (socketData_.socket, IPPROTO_IP, IP_HDRINCL, 0, 0);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> ( result == SOCKET_ERROR )</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="a00018.htm#aad5997aaaa2d622f0ca57f8b24a51a7b">  105</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#aad5997aaaa2d622f0ca57f8b24a51a7b">RawSocket :: start</a> ()</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> ( socketData_.socket != INVALID_SOCKET )</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        this-&gt;<a class="code" href="a00018.htm#a8c528baf37154d347366083f0f816846">stop</a> ();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    socketData_.socket = socket (AF_INET, SOCK_RAW, IPPROTO_IP);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    socketData_.addrInfo.sin_family = AF_INET;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">if</span> ( socketData_.socket == INVALID_SOCKET )</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::CantStart, ::<a class="code" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">GetLastError</a> ());</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="a00018.htm#abdafadb8f1d146ec549c9a5c1143b988">  132</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#abdafadb8f1d146ec549c9a5c1143b988">RawSocket :: setIP</a>   (<span class="keyword">const</span> <span class="keywordtype">char</span>* IP)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span> ( !IP )</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        socketData_.addrInfo.sin_addr.S_un.S_addr = htonl (INADDR_ANY);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    socketData_.addrInfo.sin_addr.S_un.S_addr = inet_addr (IP);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> ( socketData_.addrInfo.sin_addr.S_un.S_addr == INADDR_NONE )</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::CantSetIP, ::<a class="code" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">GetLastError</a> ());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> ( bind (socketData_.socket, (sockaddr*)&amp;socketData_.addrInfo,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                sizeof (socketData_.addrInfo) ) )</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="a00018.htm#a9a8ff6eba0efdf5d355b649f81e23faa">  160</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00018.htm#a9a8ff6eba0efdf5d355b649f81e23faa">RawSocket :: setPort</a> (<span class="keywordtype">short</span> <span class="keywordtype">int</span> port)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    socketData_.addrInfo.sin_port = htons (port);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="a00018.htm#afaa5b169c39334f771936acbce5cfd98">  175</a></span>&#160;<span class="keywordtype">int</span>  <a class="code" href="a00018.htm#afaa5b169c39334f771936acbce5cfd98">RawSocket :: send</a>    (<span class="keyword">const</span> <span class="keywordtype">char</span>* data, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">if</span> ( socketData_.socket == INVALID_SOCKET )</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::NotStarted, 0);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    sockaddr_in* sockAddrPtr = &amp;socketData_.addrInfo;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">int</span> result = ::sendto (socketData_.socket, data, size, 0,</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                          (sockaddr*)sockAddrPtr,</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                         sizeof (socketData_.addrInfo));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">if</span> ( result == SOCKET_ERROR )</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::UnableToSend, ::<a class="code" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">GetLastError</a> ());</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="a00018.htm#a78e4ca41493a0af1db31d18cd68c39fc">  206</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00018.htm#a78e4ca41493a0af1db31d18cd68c39fc">RawSocket :: receive</a> (<span class="keywordtype">char</span>* where, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">if</span> ( socketData_.socket == INVALID_SOCKET )</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    {</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::NotStarted, 0);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    }</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordtype">int</span> addrSize = <span class="keyword">sizeof</span> (socketData_.addrInfo);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordtype">int</span> result = ::recvfrom (socketData_.socket, where, size, 0,</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                            (sockaddr*)&amp;socketData_.addrInfo,</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                             &amp;addrSize);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">if</span> ( result == SOCKET_ERROR )</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        lastError_.<a class="code" href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">set</a> (error::UnableToReceive, ::<a class="code" href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">GetLastError</a> ());</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="a00018.htm#a8c528baf37154d347366083f0f816846">  231</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="a00018.htm#a8c528baf37154d347366083f0f816846">RawSocket :: stop</a> ()</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    closesocket (socketData_.socket);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    socketData_.socket = INVALID_SOCKET;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="a00018.htm#a21b4e1b65f8daf47307ded2a7d81a769">  242</a></span>&#160;<a class="code" href="a00018.htm#a21b4e1b65f8daf47307ded2a7d81a769">RawSocket :: ~RawSocket</a> ()</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;{</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="a00018.htm#a8c528baf37154d347366083f0f816846">stop</a> ();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"># endif </span><span class="comment">/* H_GRNETWORK_RAWSOCKET_RAWSOCKETMETHODS */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a00006_htm_a34d784c7de57ef82ac88e00044804479"><div class="ttname"><a href="a00006.htm#a34d784c7de57ef82ac88e00044804479">ErrorInfo::lib</a></div><div class="ttdeci">unsigned int lib() const </div><div class="ttdef"><b>Definition:</b> <a href="a00053_source.htm#l00071">ErrorInfoMethods.h:71</a></div></div>
<div class="ttc" id="a00018_htm_a78e4ca41493a0af1db31d18cd68c39fc"><div class="ttname"><a href="a00018.htm#a78e4ca41493a0af1db31d18cd68c39fc">RawSocket::receive</a></div><div class="ttdeci">bool receive(char *data, unsigned int size)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00206">RawSocketMethods.h:206</a></div></div>
<div class="ttc" id="a00018_htm_a21b4e1b65f8daf47307ded2a7d81a769"><div class="ttname"><a href="a00018.htm#a21b4e1b65f8daf47307ded2a7d81a769">RawSocket::~RawSocket</a></div><div class="ttdeci">~RawSocket()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00242">RawSocketMethods.h:242</a></div></div>
<div class="ttc" id="a00018_htm_ab2d69f96f73d1c3c912dcb3cb36b53e8"><div class="ttname"><a href="a00018.htm#ab2d69f96f73d1c3c912dcb3cb36b53e8">RawSocket::sync</a></div><div class="ttdeci">bool sync(bool makeAsync)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00058">RawSocketMethods.h:58</a></div></div>
<div class="ttc" id="a00018_htm_a9a8ff6eba0efdf5d355b649f81e23faa"><div class="ttname"><a href="a00018.htm#a9a8ff6eba0efdf5d355b649f81e23faa">RawSocket::setPort</a></div><div class="ttdeci">void setPort(short int port)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00160">RawSocketMethods.h:160</a></div></div>
<div class="ttc" id="a00006_htm_a77b8d5ed5fe34cebb7748043cf4f7e27"><div class="ttname"><a href="a00006.htm#a77b8d5ed5fe34cebb7748043cf4f7e27">ErrorInfo::set</a></div><div class="ttdeci">void set(unsigned int local, unsigned int lib)</div><div class="ttdef"><b>Definition:</b> <a href="a00053_source.htm#l00028">ErrorInfoMethods.h:28</a></div></div>
<div class="ttc" id="a00006_htm"><div class="ttname"><a href="a00006.htm">ErrorInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="a00052_source.htm#l00015">ErrorInfo.h:15</a></div></div>
<div class="ttc" id="a00018_htm_a8c528baf37154d347366083f0f816846"><div class="ttname"><a href="a00018.htm#a8c528baf37154d347366083f0f816846">RawSocket::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00231">RawSocketMethods.h:231</a></div></div>
<div class="ttc" id="a00018_htm_ad7e1f526195723df9ed919eb7e9f130e"><div class="ttname"><a href="a00018.htm#ad7e1f526195723df9ed919eb7e9f130e">RawSocket::RawSocket</a></div><div class="ttdeci">RawSocket()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00011">RawSocketMethods.h:11</a></div></div>
<div class="ttc" id="a00018_htm_aad5997aaaa2d622f0ca57f8b24a51a7b"><div class="ttname"><a href="a00018.htm#aad5997aaaa2d622f0ca57f8b24a51a7b">RawSocket::start</a></div><div class="ttdeci">bool start()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00105">RawSocketMethods.h:105</a></div></div>
<div class="ttc" id="a00018_htm_a6e3fd57651efdaf0a1065686b14a0b89"><div class="ttname"><a href="a00018.htm#a6e3fd57651efdaf0a1065686b14a0b89">RawSocket::GetLastError</a></div><div class="ttdeci">ErrorInfo GetLastError()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00026">RawSocketMethods.h:26</a></div></div>
<div class="ttc" id="a00018_htm_a9d411a15161cf88af69e5761fd3ca88b"><div class="ttname"><a href="a00018.htm#a9d411a15161cf88af69e5761fd3ca88b">RawSocket::isBlockError</a></div><div class="ttdeci">bool isBlockError()</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00039">RawSocketMethods.h:39</a></div></div>
<div class="ttc" id="a00018_htm_afaa5b169c39334f771936acbce5cfd98"><div class="ttname"><a href="a00018.htm#afaa5b169c39334f771936acbce5cfd98">RawSocket::send</a></div><div class="ttdeci">int send(const char *data, unsigned int size)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00175">RawSocketMethods.h:175</a></div></div>
<div class="ttc" id="a00018_htm_a0b2927ba927eaa96bdfda17504881b90"><div class="ttname"><a href="a00018.htm#a0b2927ba927eaa96bdfda17504881b90">RawSocket::customHeader</a></div><div class="ttdeci">bool customHeader(bool makeCustom)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00085">RawSocketMethods.h:85</a></div></div>
<div class="ttc" id="a00018_htm_abdafadb8f1d146ec549c9a5c1143b988"><div class="ttname"><a href="a00018.htm#abdafadb8f1d146ec549c9a5c1143b988">RawSocket::setIP</a></div><div class="ttdeci">bool setIP(const char *IP)</div><div class="ttdef"><b>Definition:</b> <a href="a00076_source.htm#l00132">RawSocketMethods.h:132</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Документация по 2GrayEngine. Последние изменения: Пн 19 Май 2014 03:06:19. Создано системой &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
