<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>2GrayEngine: Исходный файл typeAttributesMethods.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen_.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.bmp"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">2GrayEngine
   </div>
   <div id="projectbrief">Network engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.5 -->
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_32937a55a6fb687a16826cf9f361e0b9.htm">2GrayEngine-master</a></li><li class="navelem"><a class="el" href="dir_abb26aa1f738470fd3c1e4a1410fa318.htm">code</a></li><li class="navelem"><a class="el" href="dir_7b03119028471f63899a2cbbb9408639.htm">logic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">typeAttributesMethods.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor"># ifndef H_LOGIC_TYPEATTRIBUTESMETHODS</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor"># define H_LOGIC_TYPEATTRIBUTESMETHODS</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="a00032.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">   15</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00032.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">TypeAttributes :: verify</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">if</span> ( !<span class="keyword">this</span> )</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">if</span> ( typeCode_ == 0 )</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">if</span> ( !name_ )</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">if</span> ( !create_ )</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">if</span> ( !createOn_ )</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="a00032.htm#aa9e0f5fe6042c011e3ac7725782820c6">   41</a></span>&#160;TypeAttributes :: TypeAttributes (<span class="keywordtype">int</span> typeCode, <span class="keyword">const</span> <span class="keywordtype">char</span>* name,</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                  createFunc* create, createOnFunc* createOn)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    :</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    typeCode_ (typeCode),</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    version_  (ENGINE_VERSION),</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    name_     (nullptr),</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    create_   (create),</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    createOn_ (createOn)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> ( !name )</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        name_ = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        return ;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size = strlen (name) + 1;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        name_ = <span class="keyword">new</span> <span class="keywordtype">char</span>[size];</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        memcpy (name_, name, size);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        name_[size - 1] = 0;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">catch</span> (::std::bad_alloc)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        name_ = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="a00032.htm#a04acf73b3b35899b406d9bdefa65ff88">   75</a></span>&#160;TypeAttributes :: TypeAttributes (<a class="code" href="a00032.htm">TypeAttributes</a>&amp; cpy)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    :</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    typeCode_ (cpy.typeCode()),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    version_  (ENGINE_VERSION),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    name_     (nullptr),</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    create_   (cpy.createPtr()),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    createOn_ (cpy.createOnPtr ())</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> ( !cpy.<a class="code" href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">name</a>() )</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        name_ = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        return ;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size = strlen (cpy.<a class="code" href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">name</a>()) + 1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        name_ = <span class="keyword">new</span> <span class="keywordtype">char</span>[size];</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        memcpy (name_, cpy.<a class="code" href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">name</a>(), size);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        name_[size - 1] = 0;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">catch</span> (::std::bad_alloc)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        name_ = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="a00032.htm#a3800a3e08cfbdf25e8bbc97bf34575e3">  109</a></span>&#160;<span class="keywordtype">int</span>         <a class="code" href="a00032.htm#a3800a3e08cfbdf25e8bbc97bf34575e3">TypeAttributes :: typeCode</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">return</span> typeCode_;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="a00032.htm#aa5f30d51d4a86222cd00a2e05826a7db">  121</a></span>&#160;<span class="keywordtype">int</span>         <a class="code" href="a00032.htm#aa5f30d51d4a86222cd00a2e05826a7db">TypeAttributes :: version</a>  ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> version_;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">  133</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">TypeAttributes :: name</a>     ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> name_;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="a00032.htm#af3845b1e48937f023a364589bb515920">  147</a></span>&#160;<a class="code" href="a00016.htm">Object</a>*     <a class="code" href="a00032.htm#af3845b1e48937f023a364589bb515920">TypeAttributes :: create</a>   ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="a00032.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () )</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;broken object&quot;</span>);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> create_ ();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="a00032.htm#ab5de14d40d78b9c8a2445f4a65aeff12">  168</a></span>&#160;<a class="code" href="a00016.htm">Object</a>*     <a class="code" href="a00032.htm#ab5de14d40d78b9c8a2445f4a65aeff12">TypeAttributes :: createOn</a> (<span class="keyword">const</span> <span class="keywordtype">char</span>* data)<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="a00032.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () )</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;broken object&quot;</span>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    }</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">return</span> createOn_ (data);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="a00032.htm#a9520649a60d070c5a92fa8ee4ce6bd23">  186</a></span>&#160;createFunc* <a class="code" href="a00032.htm#a9520649a60d070c5a92fa8ee4ce6bd23">TypeAttributes :: createPtr</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">return</span> create_;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="a00032.htm#a4a454d0d1c3fe92770b4a805e53ee83a">  198</a></span>&#160;createOnFunc* <a class="code" href="a00032.htm#a4a454d0d1c3fe92770b4a805e53ee83a">TypeAttributes :: createOnPtr</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    <span class="keywordflow">return</span> createOn_;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;TypeAttributes :: ~TypeAttributes ()</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">if</span> ( name_ )</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keyword">delete</span>[] name_;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="comment">/* My poison is null */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    name_     = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    create_   = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    createOn_ = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    typeCode_ = 0;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor"># endif </span><span class="comment">/* H_LOGIC_TYPEATTRIBUTESMETHODS */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a00032_htm_a3800a3e08cfbdf25e8bbc97bf34575e3"><div class="ttname"><a href="a00032.htm#a3800a3e08cfbdf25e8bbc97bf34575e3">TypeAttributes::typeCode</a></div><div class="ttdeci">int typeCode() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00109">typeAttributesMethods.h:109</a></div></div>
<div class="ttc" id="a00032_htm_a4a454d0d1c3fe92770b4a805e53ee83a"><div class="ttname"><a href="a00032.htm#a4a454d0d1c3fe92770b4a805e53ee83a">TypeAttributes::createOnPtr</a></div><div class="ttdeci">createOnFunc * createOnPtr() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00198">typeAttributesMethods.h:198</a></div></div>
<div class="ttc" id="a00032_htm_aa5f30d51d4a86222cd00a2e05826a7db"><div class="ttname"><a href="a00032.htm#aa5f30d51d4a86222cd00a2e05826a7db">TypeAttributes::version</a></div><div class="ttdeci">int version() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00121">typeAttributesMethods.h:121</a></div></div>
<div class="ttc" id="a00032_htm_a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><div class="ttname"><a href="a00032.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">TypeAttributes::verify</a></div><div class="ttdeci">bool verify() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00015">typeAttributesMethods.h:15</a></div></div>
<div class="ttc" id="a00032_htm"><div class="ttname"><a href="a00032.htm">TypeAttributes</a></div><div class="ttdef"><b>Definition:</b> <a href="a00098_source.htm#l00015">typeAttributes.h:15</a></div></div>
<div class="ttc" id="a00016_htm"><div class="ttname"><a href="a00016.htm">Object</a></div><div class="ttdef"><b>Definition:</b> <a href="a00071_source.htm#l00012">Object.h:12</a></div></div>
<div class="ttc" id="a00032_htm_af3845b1e48937f023a364589bb515920"><div class="ttname"><a href="a00032.htm#af3845b1e48937f023a364589bb515920">TypeAttributes::create</a></div><div class="ttdeci">Object * create() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00147">typeAttributesMethods.h:147</a></div></div>
<div class="ttc" id="a00032_htm_a9520649a60d070c5a92fa8ee4ce6bd23"><div class="ttname"><a href="a00032.htm#a9520649a60d070c5a92fa8ee4ce6bd23">TypeAttributes::createPtr</a></div><div class="ttdeci">createFunc * createPtr() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00186">typeAttributesMethods.h:186</a></div></div>
<div class="ttc" id="a00032_htm_a25844783e4bef74ca9a17519c239a27e"><div class="ttname"><a href="a00032.htm#a25844783e4bef74ca9a17519c239a27e">TypeAttributes::name</a></div><div class="ttdeci">const char * name() const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00133">typeAttributesMethods.h:133</a></div></div>
<div class="ttc" id="a00032_htm_ab5de14d40d78b9c8a2445f4a65aeff12"><div class="ttname"><a href="a00032.htm#ab5de14d40d78b9c8a2445f4a65aeff12">TypeAttributes::createOn</a></div><div class="ttdeci">Object * createOn(const char *) const </div><div class="ttdef"><b>Definition:</b> <a href="a00099_source.htm#l00168">typeAttributesMethods.h:168</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Документация по 2GrayEngine. Последние изменения: Пн 19 Май 2014 03:06:19. Создано системой &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
