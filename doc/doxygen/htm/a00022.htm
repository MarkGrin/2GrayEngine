<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>2GrayEngine: Класс Server</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen_.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.bmp"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">2GrayEngine
   </div>
   <div id="projectbrief">Network engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.5 -->
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Открытые члены</a> &#124;
<a href="a00152.htm">Полный список членов класса</a>  </div>
  <div class="headertitle">
<div class="title">Класс Server</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Граф связей класса Server:</div>
<div class="dyncontent">
<div class="center"><img src="a00153.png" border="0" usemap="#_server_coll__map" alt="Collaboration graph"/></div>
<map name="_server_coll__map" id="_server_coll__map">
<area shape="rect" id="node2" href="a00024.htm" title="{Socket\n|&#45; isSocket_\l&#45; isServer_\l|+ Socket()\l+ start()\l+ stop()\l+ setIP()\l+ setPort()\l+ send()\l+ receive()\l+ sync()\l+ blockError()\l+ getLastError()\land 25 more...\l&#45; Socket()\l&#45; operator=()\l}" alt="" coords="133,233,257,480"/><area shape="rect" id="node5" href="a00001.htm" title="{Client\n||+ connect()\l}" alt="" coords="146,555,243,628"/><area shape="rect" id="node3" href="a00016.htm" title="{Object\n|# typeCode_\l# name_\l|+ verify()\l+ Object()\l+ is()\l+ setName()\l+ typeCode()\l&#45; Object()\l}" alt="" coords="142,5,247,159"/><area shape="rect" id="node4" href="a00025.htm" title="{socketData\n|+ addrInfo\l+ socket\l|}" alt="" coords="271,39,366,125"/><area shape="rect" id="node6" href="a00006.htm" title="{ErrorInfo\n|&#45; local_\l&#45; lib_\l|+ ErrorInfo()\l+ set()\l+ set()\l+ local()\l+ lib()\l}" alt="" coords="390,12,490,152"/></map>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Открытые члены</h2></td></tr>
<tr class="memitem:af2f1305573ef7939b3e8400354878e0d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00022.htm#af2f1305573ef7939b3e8400354878e0d">Server</a> ()</td></tr>
<tr class="separator:af2f1305573ef7939b3e8400354878e0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ea97bb8eac07838048fae3e0d32332a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00022.htm#a9ea97bb8eac07838048fae3e0d32332a">listen</a> (<a class="el" href="a00002.htm">Client</a> *listenSocket=nullptr)</td></tr>
<tr class="separator:a9ea97bb8eac07838048fae3e0d32332a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5997aaaa2d622f0ca57f8b24a51a7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#aad5997aaaa2d622f0ca57f8b24a51a7b">start</a> ()</td></tr>
<tr class="separator:aad5997aaaa2d622f0ca57f8b24a51a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c528baf37154d347366083f0f816846"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a8c528baf37154d347366083f0f816846">stop</a> ()</td></tr>
<tr class="separator:a8c528baf37154d347366083f0f816846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38cf176bc8884637e3e21c35690b8638"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a38cf176bc8884637e3e21c35690b8638">setIP</a> (const char *IP)</td></tr>
<tr class="separator:a38cf176bc8884637e3e21c35690b8638"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8ff6eba0efdf5d355b649f81e23faa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a9a8ff6eba0efdf5d355b649f81e23faa">setPort</a> (short int port)</td></tr>
<tr class="separator:a9a8ff6eba0efdf5d355b649f81e23faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09b48dad5c3407d24a995a199d5af1a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a09b48dad5c3407d24a995a199d5af1a4">setPort</a> (const char *port)</td></tr>
<tr class="separator:a09b48dad5c3407d24a995a199d5af1a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a637e37aa77a3652b1d25518a5af8570a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a637e37aa77a3652b1d25518a5af8570a">send</a> (const char *what, unsigned int size)</td></tr>
<tr class="separator:a637e37aa77a3652b1d25518a5af8570a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02946ade35a66fe6fad5f42b280dab85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a02946ade35a66fe6fad5f42b280dab85">send</a> (const char *buff, int size)</td></tr>
<tr class="separator:a02946ade35a66fe6fad5f42b280dab85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5017ae7e9d1d5c8a8f75517ddea62b85"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a5017ae7e9d1d5c8a8f75517ddea62b85">receive</a> (char *where, unsigned int size)</td></tr>
<tr class="separator:a5017ae7e9d1d5c8a8f75517ddea62b85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa7ae862b3d49d9b25dcf953e83f7c68"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#aaa7ae862b3d49d9b25dcf953e83f7c68">receive</a> (char *txt, int size)</td></tr>
<tr class="separator:aaa7ae862b3d49d9b25dcf953e83f7c68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08bcb94d9d35dd0f2bfbbe2670ccbe91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a08bcb94d9d35dd0f2bfbbe2670ccbe91">sync</a> (bool makeAsync)</td></tr>
<tr class="separator:a08bcb94d9d35dd0f2bfbbe2670ccbe91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd26f11788e11ab04b80335afdddf778"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#acd26f11788e11ab04b80335afdddf778">blockError</a> () const </td></tr>
<tr class="separator:acd26f11788e11ab04b80335afdddf778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5da055f3ea72b200f23bf0d401d3fc1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00006.htm">ErrorInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#ac5da055f3ea72b200f23bf0d401d3fc1">getLastError</a> () const </td></tr>
<tr class="separator:ac5da055f3ea72b200f23bf0d401d3fc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a458bbe4cf81360301586b2e62a7f9dd2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a458bbe4cf81360301586b2e62a7f9dd2">listen</a> ()</td></tr>
<tr class="separator:a458bbe4cf81360301586b2e62a7f9dd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1396bf9b5defe9fa844a63b5cd40ac0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00024.htm#a1396bf9b5defe9fa844a63b5cd40ac0e">connect</a> ()</td></tr>
<tr class="separator:a1396bf9b5defe9fa844a63b5cd40ac0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00016.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () const </td></tr>
<tr class="separator:a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () const </td></tr>
<tr class="separator:a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c656d725254401f199ca3931d1522d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00016.htm#a7c656d725254401f199ca3931d1522d9">is</a> (const char *name) const </td></tr>
<tr class="separator:a7c656d725254401f199ca3931d1522d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c656d725254401f199ca3931d1522d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.htm#a7c656d725254401f199ca3931d1522d9">is</a> (const char *name) const </td></tr>
<tr class="separator:a7c656d725254401f199ca3931d1522d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7249cba883105a37cf189e3422194356"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00016.htm#a7249cba883105a37cf189e3422194356">setName</a> (const char *name)</td></tr>
<tr class="separator:a7249cba883105a37cf189e3422194356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7249cba883105a37cf189e3422194356"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.htm#a7249cba883105a37cf189e3422194356">setName</a> (const char *name)</td></tr>
<tr class="separator:a7249cba883105a37cf189e3422194356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3800a3e08cfbdf25e8bbc97bf34575e3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00016.htm#a3800a3e08cfbdf25e8bbc97bf34575e3">typeCode</a> () const </td></tr>
<tr class="separator:a3800a3e08cfbdf25e8bbc97bf34575e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3800a3e08cfbdf25e8bbc97bf34575e3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.htm#a3800a3e08cfbdf25e8bbc97bf34575e3">typeCode</a> () const </td></tr>
<tr class="separator:a3800a3e08cfbdf25e8bbc97bf34575e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Подробное описание</h2>
<div class="textblock"><p>This is <a class="el" href="a00022.htm">Server</a> class. It is inherited from <a class="el" href="a00024.htm">Socket</a> class. It represents <a class="el" href="a00022.htm">Server</a> side in TCP connection. </p>

<p>См. определение в файле <a class="el" href="a00081_source.htm">grNetwork/Socket/Server.h</a> строка <a class="el" href="a00081_source.htm#l00012">12</a></p>
</div><h2 class="groupheader">Конструктор(ы)</h2>
<a class="anchor" id="af2f1305573ef7939b3e8400354878e0d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00022.htm">Server</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is standard constructor that sets everything to zero </p>

<p>См. определение в файле <a class="el" href="a00083_source.htm">grNetwork/Socket/ServerMethods.h</a> строка <a class="el" href="a00083_source.htm#l00011">11</a></p>

</div>
</div>
<h2 class="groupheader">Методы</h2>
<a class="anchor" id="a9ea97bb8eac07838048fae3e0d32332a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool listen </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="a00002.htm">Client</a> *&#160;</td>
          <td class="paramname"><em>listenSocket</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This function listen for an incoming connection. If parametr is nullptr, it accepts connection on itself, so you can work with new connection with this server. But if parametr is not nullptr it accepts connection on socket given in parametr, so you can work with new connection by parametr socket and continue working with listening with this socket.</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">listenSocket</td><td>- socket that will have new connection. By default is zero</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>success </dd></dl>

<p>См. определение в файле <a class="el" href="a00083_source.htm">grNetwork/Socket/ServerMethods.h</a> строка <a class="el" href="a00083_source.htm#l00031">31</a></p>

</div>
</div>
<a class="anchor" id="aad5997aaaa2d622f0ca57f8b24a51a7b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool start </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function start socket. Before using network functions of this class start socket. After using use stop function</p>
<dl class="section return"><dt>Возвращает</dt><dd>success </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00027">27</a></p>

</div>
</div>
<a class="anchor" id="a8c528baf37154d347366083f0f816846"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function stops socket. </p>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00048">48</a></p>

</div>
</div>
<a class="anchor" id="a38cf176bc8884637e3e21c35690b8638"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void setIP </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>IP</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function Sets IP.</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">IP</td><td>- IP to be set</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>success</dd></dl>
<p>this function sets port of a socket</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">portStr</td><td>- string with port number, example "80" </td></tr>
  </table>
  </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00063">63</a></p>

</div>
</div>
<a class="anchor" id="a9a8ff6eba0efdf5d355b649f81e23faa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void setPort </td>
          <td>(</td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>port</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function sets port</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">port</td><td>- port to be set </td></tr>
  </table>
  </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00087">87</a></p>

</div>
</div>
<a class="anchor" id="a09b48dad5c3407d24a995a199d5af1a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void setPort </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>portStr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function sets port of a socket</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">portStr</td><td>- string with port number, example "80" </td></tr>
  </table>
  </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00084_source.htm">userLib/ServerMethods.h</a> строка <a class="el" href="a00084_source.htm#l00032">32</a></p>

</div>
</div>
<a class="anchor" id="a637e37aa77a3652b1d25518a5af8570a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool send </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>what</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="a00010.htm">Function</a> that sends your information.</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>- data to be sent </td></tr>
    <tr><td class="paramname">size</td><td>- size of data buffer to be sent</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>- success </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00102">102</a></p>

</div>
</div>
<a class="anchor" id="a02946ade35a66fe6fad5f42b280dab85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void send </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>buff</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function sends data through the socket to the socket that socket is connected to. To be able to send socket must be connected destination socket</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">buff</td><td>- what to send </td></tr>
    <tr><td class="paramname">size</td><td>- size of a buffer to send </td></tr>
  </table>
  </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">echo.h</a> строка <a class="el" href="a00050_source.htm#l00177">177</a></p>

</div>
</div>
<a class="anchor" id="a5017ae7e9d1d5c8a8f75517ddea62b85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool receive </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>where</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function receives data from socket.</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">where</td><td>- where tp put data </td></tr>
    <tr><td class="paramname">size</td><td>- size of data to be putted in data buffer</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>- success </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00130">130</a></p>

</div>
</div>
<a class="anchor" id="aaa7ae862b3d49d9b25dcf953e83f7c68"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void receive </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function receives data throgh the server from socket that server is connected to. <a class="el" href="a00024.htm">Socket</a> must be connected to socket to be able to receive something</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>- buffer to write incoming message </td></tr>
    <tr><td class="paramname">size</td><td>- size of an incoming message </td></tr>
  </table>
  </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00084_source.htm">userLib/ServerMethods.h</a> строка <a class="el" href="a00084_source.htm#l00127">127</a></p>

</div>
</div>
<a class="anchor" id="a08bcb94d9d35dd0f2bfbbe2670ccbe91"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sync </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>makeAsync</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function sets socket in blocking or nonblocking mode. It can be called after start function.</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">makeAsync</td><td>true - make non - blocking, false - make blocking</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>succes. </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00169">169</a></p>

</div>
</div>
<a class="anchor" id="acd26f11788e11ab04b80335afdddf778"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool blockError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function looks if error was real or if it is fake error that happened, because socket is non blocking. Try to search non blocking sockets in msdn.</p>
<dl class="section return"><dt>Возвращает</dt><dd>true - fake error, false - real error. </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00186">186</a></p>

</div>
</div>
<a class="anchor" id="ac5da055f3ea72b200f23bf0d401d3fc1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00006.htm">ErrorInfo</a> getLastError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function returns last error.</p>
<dl class="section return"><dt>Возвращает</dt><dd>last error. </dd></dl>

<p>См. определение в файле <a class="el" href="a00088_source.htm">grNetwork/Socket/SocketMethods.h</a> строка <a class="el" href="a00088_source.htm#l00154">154</a></p>

</div>
</div>
<a class="anchor" id="a458bbe4cf81360301586b2e62a7f9dd2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void listen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function listens and accept connection </p>

<p>См. определение в файле <a class="el" href="a00084_source.htm">userLib/ServerMethods.h</a> строка <a class="el" href="a00084_source.htm#l00072">72</a></p>

</div>
</div>
<a class="anchor" id="a1396bf9b5defe9fa844a63b5cd40ac0e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void connect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function connects to socket </p>

<p>См. определение в файле <a class="el" href="a00084_source.htm">userLib/ServerMethods.h</a> строка <a class="el" href="a00084_source.htm#l00088">88</a></p>

</div>
</div>
<a class="anchor" id="a5d5ed44f2168a9c5ac1a8b8d03b7ed63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool verify </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function checks if <a class="el" href="a00016.htm">Object</a> class is ok</p>
<dl class="section return"><dt>Возвращает</dt><dd>- {true} - ok {false} - broken </dd></dl>

<p>См. определение в файле <a class="el" href="a00072_source.htm">ObjectMethods.h</a> строка <a class="el" href="a00072_source.htm#l00015">15</a></p>

</div>
</div>
<a class="anchor" id="a5d5ed44f2168a9c5ac1a8b8d03b7ed63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool verify </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function checks if <a class="el" href="a00015.htm">Object</a> class is ok</p>
<dl class="section return"><dt>Возвращает</dt><dd>- {true} - ok {false} - broken </dd></dl>

<p>См. определение в файле <a class="el" href="a00047_source.htm">logic/core.h</a> строка <a class="el" href="a00047_source.htm#l00016">16</a></p>

</div>
</div>
<a class="anchor" id="a7c656d725254401f199ca3931d1522d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function checks if name of this object and given are the same</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>- name to check identity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>true - same names false - names aren't same </dd></dl>

<p>См. определение в файле <a class="el" href="a00072_source.htm">ObjectMethods.h</a> строка <a class="el" href="a00072_source.htm#l00052">52</a></p>

</div>
</div>
<a class="anchor" id="a7c656d725254401f199ca3931d1522d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool is </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function checks if name of this object and given are the same</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>- name to check identity</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>true - same names false - names aren't same </dd></dl>

<p>См. определение в файле <a class="el" href="a00047_source.htm">logic/core.h</a> строка <a class="el" href="a00047_source.htm#l00053">53</a></p>

</div>
</div>
<a class="anchor" id="a7249cba883105a37cf189e3422194356"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool setName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function sets object's name</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>- new name</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>- success </dd></dl>

<p>См. определение в файле <a class="el" href="a00072_source.htm">ObjectMethods.h</a> строка <a class="el" href="a00072_source.htm#l00070">70</a></p>

</div>
</div>
<a class="anchor" id="a7249cba883105a37cf189e3422194356"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool setName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function sets object's name</p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>- new name</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>- success </dd></dl>

<p>См. определение в файле <a class="el" href="a00047_source.htm">logic/core.h</a> строка <a class="el" href="a00047_source.htm#l00071">71</a></p>

</div>
</div>
<a class="anchor" id="a3800a3e08cfbdf25e8bbc97bf34575e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int typeCode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function return typeCode of this object</p>
<dl class="section return"><dt>Возвращает</dt><dd>- typeCode 0 - errorCode </dd></dl>

<p>См. определение в файле <a class="el" href="a00072_source.htm">ObjectMethods.h</a> строка <a class="el" href="a00072_source.htm#l00090">90</a></p>

</div>
</div>
<a class="anchor" id="a3800a3e08cfbdf25e8bbc97bf34575e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int typeCode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function return typeCode of this object</p>
<dl class="section return"><dt>Возвращает</dt><dd>- typeCode 0 - errorCode </dd></dl>

<p>См. определение в файле <a class="el" href="a00047_source.htm">logic/core.h</a> строка <a class="el" href="a00047_source.htm#l00091">91</a></p>

</div>
</div>
<hr/>Объявления и описания членов классов находятся в файлах:<ul>
<li><a class="el" href="a00081_source.htm">grNetwork/Socket/Server.h</a></li>
<li><a class="el" href="a00083_source.htm">grNetwork/Socket/ServerMethods.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Документация по 2GrayEngine. Последние изменения: Пн 19 Май 2014 03:06:19. Создано системой &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
