<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>2GrayEngine: Исходный файл run.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen_.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.bmp"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">2GrayEngine
   </div>
   <div id="projectbrief">Network engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.5 -->
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_32937a55a6fb687a16826cf9f361e0b9.htm">2GrayEngine-master</a></li><li class="navelem"><a class="el" href="dir_abb26aa1f738470fd3c1e4a1410fa318.htm">code</a></li><li class="navelem"><a class="el" href="dir_f43a24636d7873fc097a3756357a119f.htm">engine</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">run.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor"># ifndef H_ENGINE_RUN</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor"># define H_ENGINE_RUN</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keywordtype">bool</span> run         (<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keywordtype">bool</span> loadFile    (<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName, <a class="code" href="a00020.htm">ScriptHolder</a>* scpt);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keywordtype">bool</span> addStandard (::std::vector&lt;logic::Function*&gt;* functions, <a class="code" href="a00033.htm">TypeList</a>* typeList);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keywordtype">bool</span> run (<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="a00020.htm">ScriptHolder</a> scpt;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">if</span> ( !loadFile (fileName, &amp;scpt) )</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            OUTPUT_INTERNAL (<span class="stringliteral">&quot;Cant load file&quot;</span>);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            OUTPUT_ERROR (<span class="stringliteral">&quot;Script file wasn&#39;t loaded&quot;</span>);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        ::std::vector&lt;logic::Function*&gt; functions;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        ::std::vector&lt;logic::Object*&gt; pool;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        ::std::vector&lt;::std::pair&lt;char*,unsigned int&gt;&gt; placeInPool;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="a00033.htm">TypeList</a> typeList;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        ::std::vector&lt;unsigned char&gt; execMem;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <a class="code" href="a00008.htm">ExecMem</a> mem;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        LibHolder libs;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">if</span> ( !addStandard (&amp;functions, &amp;typeList) )</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            OUTPUT_INTERNAL (<span class="stringliteral">&quot;add standard failed&quot;</span>);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="a00004.htm">environment</a> en = {&amp;scpt, &amp;functions, &amp;pool, &amp;placeInPool, &amp;typeList,</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                          &amp;execMem, &amp;mem, &amp;libs};</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">if</span> ( !compile (&amp;en) )</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            OUTPUT_INTERNAL (<span class="stringliteral">&quot;compile function didn&#39;t compile anything&quot;</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            OUTPUT_ERROR (<span class="stringliteral">&quot;compile function didn&#39;t compile anything&quot;</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        execute (mem.<a class="code" href="a00008.htm#a90ca964ebcc1b02bbcde225edd49e812">size</a> (), &amp;functions, &amp;pool,</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                 &amp;placeInPool, &amp;mem);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">catch</span> (...)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;unhandled exception&quot;</span>);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        OUTPUT_ERROR (<span class="stringliteral">&quot;during running file some unhandled exception caught&quot;</span>);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keywordtype">bool</span> loadFile (<span class="keyword">const</span> <span class="keywordtype">char</span>* fileName, <a class="code" href="a00020.htm">ScriptHolder</a>* scpt)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> ( !fileName || !scpt )</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;bad arguments given&quot;</span>);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    FILE* file = fopen (fileName, <span class="stringliteral">&quot;r&quot;</span>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">if</span> ( !file )</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;cant open file:%s&quot;</span>, fileName);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        OUTPUT_ERROR (<span class="stringliteral">&quot;cant open file:%s&quot;</span>, fileName);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">char</span> line[256] = {};</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lineCount = 0; !feof (file); lineCount++)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> letterCount = 0; letterCount &lt;= 80; letterCount++)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <span class="keywordflow">if</span> ( !fread (line + letterCount, 1, 1, file) )</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                <span class="keywordflow">continue</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            line[letterCount + 1] = 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">if</span> ( line[letterCount] == <span class="charliteral">&#39;\n&#39;</span> || feof (file) )</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                line[letterCount] = 0;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                scpt-&gt;<a class="code" href="a00020.htm#a611e2a47e1dc2dd099826e4a719366d5">pushBack</a> (line, letterCount);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        line[0] = 0;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keywordtype">bool</span> addStandard (::std::vector&lt;logic::Function*&gt;* functions, <a class="code" href="a00033.htm">TypeList</a>* typeList)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">if</span> ( !functions || !typeList )</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;bad arguments given&quot;</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">bool</span> success = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        functions-&gt;push_back (&amp;userlib::ECHO);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        functions-&gt;push_back (&amp;userlib::TEXTUSERINPUT);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        success = success &amp;&amp; typeList -&gt;<a class="code" href="a00033.htm#a56767339d8d805b5f26d8fae82b8f757">add</a> (&amp;userlib::TEXTattributes, 12);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">catch</span> (::std::bad_alloc)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;was unable to push function&quot;</span>);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">if</span> ( !success )</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;was unable to add type&quot;</span>);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor"># endif </span><span class="comment">/* H_ENGINE_RUN */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a00033_htm_a56767339d8d805b5f26d8fae82b8f757"><div class="ttname"><a href="a00033.htm#a56767339d8d805b5f26d8fae82b8f757">TypeList::add</a></div><div class="ttdeci">bool add(logic::TypeAttributes *type, int typeCode)</div><div class="ttdef"><b>Definition:</b> <a href="a00101_source.htm#l00032">TypeListMethods.h:32</a></div></div>
<div class="ttc" id="a00008_htm_a90ca964ebcc1b02bbcde225edd49e812"><div class="ttname"><a href="a00008.htm#a90ca964ebcc1b02bbcde225edd49e812">ExecMem::size</a></div><div class="ttdeci">unsigned int size() const </div><div class="ttdef"><b>Definition:</b> <a href="a00056_source.htm#l00040">execMemMethods.h:40</a></div></div>
<div class="ttc" id="a00033_htm"><div class="ttname"><a href="a00033.htm">TypeList</a></div><div class="ttdef"><b>Definition:</b> <a href="a00100_source.htm#l00012">TypeList.h:12</a></div></div>
<div class="ttc" id="a00008_htm"><div class="ttname"><a href="a00008.htm">ExecMem</a></div><div class="ttdef"><b>Definition:</b> <a href="a00055_source.htm#l00013">execMem.h:13</a></div></div>
<div class="ttc" id="a00020_htm"><div class="ttname"><a href="a00020.htm">ScriptHolder</a></div><div class="ttdef"><b>Definition:</b> <a href="a00079_source.htm#l00012">scriptHolder.h:12</a></div></div>
<div class="ttc" id="a00004_htm"><div class="ttname"><a href="a00004.htm">environment</a></div><div class="ttdef"><b>Definition:</b> <a href="a00051_source.htm#l00014">environment.h:14</a></div></div>
<div class="ttc" id="a00020_htm_a611e2a47e1dc2dd099826e4a719366d5"><div class="ttname"><a href="a00020.htm#a611e2a47e1dc2dd099826e4a719366d5">ScriptHolder::pushBack</a></div><div class="ttdeci">bool pushBack(const char *line, unsigned int length)</div><div class="ttdef"><b>Definition:</b> <a href="a00080_source.htm#l00125">scriptHolderMethods.h:125</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Документация по 2GrayEngine. Последние изменения: Пн 19 Май 2014 03:06:19. Создано системой &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
