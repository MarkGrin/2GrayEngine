<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.5"/>
<title>2GrayEngine: Исходный файл FunctionMethods.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen_.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.bmp"/></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">2GrayEngine
   </div>
   <div id="projectbrief">Network engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.5 -->
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_32937a55a6fb687a16826cf9f361e0b9.htm">2GrayEngine-master</a></li><li class="navelem"><a class="el" href="dir_abb26aa1f738470fd3c1e4a1410fa318.htm">code</a></li><li class="navelem"><a class="el" href="dir_7b03119028471f63899a2cbbb9408639.htm">logic</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FunctionMethods.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor"># ifndef H_LOGIC_FUNCTIONMETHODS</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor"># define H_LOGIC_FUNCTIONMETHODS</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="a00010.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">   15</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00010.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">Function :: verify</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">if</span> ( !<span class="keyword">this</span> )</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="a00010.htm#aa61125691a5b694a46ce9f6a0fbe5093">   27</a></span>&#160;<a class="code" href="a00010.htm#aa61125691a5b694a46ce9f6a0fbe5093">Function :: Function</a> ()</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    :</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    attributes_ (nullptr)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="a00010.htm#a7fbd0890ee0991f4a2cab7cd043d0332">   42</a></span>&#160;<span class="keywordtype">bool</span>     <a class="code" href="a00010.htm#a7fbd0890ee0991f4a2cab7cd043d0332">Function :: pushArg</a> (<a class="code" href="a00016.htm">Object</a>* obj)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="a00010.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () )</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">try</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        args_.push (obj);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">catch</span> (std::bad_alloc)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="a00010.htm#aaee9bb116d149cc58976aaee665bce17">   66</a></span>&#160;<a class="code" href="a00016.htm">Object</a>*  <a class="code" href="a00010.htm#aaee9bb116d149cc58976aaee665bce17">Function :: popArg</a>  ()</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">if</span> ( !<a class="code" href="a00010.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> () )</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="a00016.htm">Object</a>* result = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">if</span> ( args_.empty () )</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        OUTPUT_INTERNAL (<span class="stringliteral">&quot;empty argument list&quot;</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    result = args_.top ();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    args_.pop();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> result;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="a00010.htm#a63e1daa930d6eb0111dc37c2ed7805b8">   89</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00010.htm#a63e1daa930d6eb0111dc37c2ed7805b8">Function :: payLoadFunction</a> ()</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    OUTPUT_INTERNAL (<span class="stringliteral">&quot;abstract class attribtues called&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="a00010.htm#aef497f1c74b00033988b4f0188d2996c">  102</a></span>&#160;<a class="code" href="a00012.htm">FunctionAttributes</a>* <a class="code" href="a00010.htm#aef497f1c74b00033988b4f0188d2996c">Function :: attributes</a> ()<span class="keyword"> const</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    OUTPUT_INTERNAL (<span class="stringliteral">&quot;abstract class attribtues called&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="a00010.htm#ae006844a02161d12182ab372ca5c257b">  116</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="a00010.htm#ae006844a02161d12182ab372ca5c257b">Function :: execute</a> ()</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> ( !attributes_ )</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">try</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            attributes_ = this-&gt;<a class="code" href="a00010.htm#aef497f1c74b00033988b4f0188d2996c">attributes</a> ();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span> ( !(attributes_-&gt;<a class="code" href="a00012.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">verify</a> ()) )</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                OUTPUT_INTERNAL (<span class="stringliteral">&quot;bad alloced attributes&quot;</span>);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">catch</span> (::std::bad_alloc)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            OUTPUT_INTERNAL (<span class="stringliteral">&quot;cant alloc attributes&quot;</span>);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">if</span> ( attributes_-&gt;<a class="code" href="a00012.htm#abeac9de6a4c590772dd0def8e272a368">argnum</a> () != args_.size () )</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="a00010.htm#a63e1daa930d6eb0111dc37c2ed7805b8">payLoadFunction</a> ();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor"># endif </span><span class="comment">/* H_LOGIC_FUNCTIONMETHODS */</span><span class="preprocessor"></span></div>
<div class="ttc" id="a00010_htm_a63e1daa930d6eb0111dc37c2ed7805b8"><div class="ttname"><a href="a00010.htm#a63e1daa930d6eb0111dc37c2ed7805b8">Function::payLoadFunction</a></div><div class="ttdeci">virtual bool payLoadFunction()=0</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00089">FunctionMethods.h:89</a></div></div>
<div class="ttc" id="a00016_htm"><div class="ttname"><a href="a00016.htm">Object</a></div><div class="ttdef"><b>Definition:</b> <a href="a00071_source.htm#l00012">Object.h:12</a></div></div>
<div class="ttc" id="a00012_htm_a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><div class="ttname"><a href="a00012.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">FunctionAttributes::verify</a></div><div class="ttdeci">bool verify() const </div><div class="ttdef"><b>Definition:</b> <a href="a00060_source.htm#l00014">functionAttributesMethods.h:14</a></div></div>
<div class="ttc" id="a00010_htm_a5d5ed44f2168a9c5ac1a8b8d03b7ed63"><div class="ttname"><a href="a00010.htm#a5d5ed44f2168a9c5ac1a8b8d03b7ed63">Function::verify</a></div><div class="ttdeci">bool verify() const </div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00015">FunctionMethods.h:15</a></div></div>
<div class="ttc" id="a00010_htm_ae006844a02161d12182ab372ca5c257b"><div class="ttname"><a href="a00010.htm#ae006844a02161d12182ab372ca5c257b">Function::execute</a></div><div class="ttdeci">bool execute()</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00116">FunctionMethods.h:116</a></div></div>
<div class="ttc" id="a00010_htm_aaee9bb116d149cc58976aaee665bce17"><div class="ttname"><a href="a00010.htm#aaee9bb116d149cc58976aaee665bce17">Function::popArg</a></div><div class="ttdeci">Object * popArg()</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00066">FunctionMethods.h:66</a></div></div>
<div class="ttc" id="a00010_htm_aef497f1c74b00033988b4f0188d2996c"><div class="ttname"><a href="a00010.htm#aef497f1c74b00033988b4f0188d2996c">Function::attributes</a></div><div class="ttdeci">virtual FunctionAttributes * attributes() const =0</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00102">FunctionMethods.h:102</a></div></div>
<div class="ttc" id="a00010_htm_aa61125691a5b694a46ce9f6a0fbe5093"><div class="ttname"><a href="a00010.htm#aa61125691a5b694a46ce9f6a0fbe5093">Function::Function</a></div><div class="ttdeci">Function()</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00027">FunctionMethods.h:27</a></div></div>
<div class="ttc" id="a00010_htm_a7fbd0890ee0991f4a2cab7cd043d0332"><div class="ttname"><a href="a00010.htm#a7fbd0890ee0991f4a2cab7cd043d0332">Function::pushArg</a></div><div class="ttdeci">bool pushArg(Object *)</div><div class="ttdef"><b>Definition:</b> <a href="a00061_source.htm#l00042">FunctionMethods.h:42</a></div></div>
<div class="ttc" id="a00012_htm"><div class="ttname"><a href="a00012.htm">FunctionAttributes</a></div><div class="ttdef"><b>Definition:</b> <a href="a00059_source.htm#l00012">functionAttributes.h:12</a></div></div>
<div class="ttc" id="a00012_htm_abeac9de6a4c590772dd0def8e272a368"><div class="ttname"><a href="a00012.htm#abeac9de6a4c590772dd0def8e272a368">FunctionAttributes::argnum</a></div><div class="ttdeci">int argnum() const </div><div class="ttdef"><b>Definition:</b> <a href="a00060_source.htm#l00147">functionAttributesMethods.h:147</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Документация по 2GrayEngine. Последние изменения: Пн 19 Май 2014 03:06:19. Создано системой &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.5
</small></address>
</body>
</html>
